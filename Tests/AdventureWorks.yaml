## AdventureWorks SQL Questions
## This file contains SQL questions and answers for the AdventureWorks database.
## The questions are divided into three categories: Easy, Medium, and Hard. 
## You can encounter these questions in https://github.com/keilorg/sqlzoo-solutions/

Question:
  Q1:
    Q-AdvW: Show the first name and the email address of customer with CompanyName 'Bike World'
    R-AdvW: |
    S-AdvW: |
      SELECT firstname, emailaddress
      FROM Customer
      WHERE companyname = 'Bike World';
  Q2:
    Q-AdvW: Show the CompanyName for all customers with an address in City 'Dallas'
    R-AdvW: |
    S-AdvW: |
      SELECT companyname
      FROM Customer c JOIN CustomerAddress ca ON c.customerid = ca.customerid
      JOIN Address a ON ca.addressid = a.addressid
      WHERE city = 'Dallas';

  Q3:
    Q-AdvW: Show the CompanyName for all customers with an address in City 'Dallas' and StateProvince 'Texas'
    R-AdvW: |
    S-AdvW: |
      SELECT companyname
      FROM Customer c JOIN CustomerAddress ca ON c.customerid = ca.customerid
      JOIN Address a ON ca.addressid = a.addressid
      WHERE city = 'Dallas' AND stateprovince = 'Texas';

  Q4:
    Q-AdvW:  Give the CompanyName of those customers with orders over $100000. Include the subtotal plus tax plus freight.
    R-AdvW: |
    S-AdvW: |
      SELECT companyname
      FROM Customer c JOIN SalesOrderHeader sh ON c.customerid = sh.customerid
      WHERE subtotal + taxamt + freight > 100000;

  Q5:
    Q-AdvW: Find the number of left racing socks ('Racing Socks, L') ordered by CompanyName 'Riding Cycles'
    R-AdvW: |
    S-AdvW: |
      SELECT SUM(orderqty) total
      FROM Product p JOIN SalesOrderDetail sd ON p.productid = sd.productid
      JOIN SalesOrderHeader sh ON sd.salesorderid = sh.salesorderid
      JOIN Customer c ON sh.customerid = c.customerid
      WHERE (Name = 'Racing Socks, L') AND (companyname = 'Riding Cycles');

  Q6:
    Q-AdvW:  Single Item Order - is a customer order where only one item is ordered. Show the SalesOrderID and the UnitPrice for every Single Item Order.
    R-AdvW: |
    S-AdvW: |
      WITH temp1 AS (
        SELECT salesorderid, SUM(orderqty) items
        FROM SalesOrderDetail
        GROUP BY salesorderid
        HAVING items = 1
      )
      SELECT salesorderid, unitprice
      FROM SalesOrderDetail
      WHERE salesorderid IN (SELECT salesorderid FROM temp1);

  Q7:
    Q-AdvW: List the product name and the CompanyName for all Customers who ordered ProductModel 'Racing Socks'.
    R-AdvW: |
    S-AdvW: |
      SELECT p.name, companyname
      FROM Customer c JOIN SalesOrderHeader sh ON c.customerid = sh.customerid
      JOIN SalesOrderDetail sd ON sh.salesorderid = sd.salesorderid
      JOIN Product p ON sd.productid = p.productid
      JOIN ProductModel pm ON p.productmodelid = pm.productmodelid
      WHERE pm.name = 'Racing Socks';

  Q8:
    Q-AdvW: Show the product description for culture 'fr' for product with ProductID 736.
    R-AdvW: |
    S-AdvW: |
      SELECT description
      FROM Product p JOIN ProductModel pm ON p.productmodelid = pm.productmodelid
      JOIN ProductModelProductDescription pmpd ON pm.productmodelid = pmpd.productmodelid
      JOIN ProductDescription pd ON pmpd.productdescriptionid = pd.productdescriptionid
      WHERE (productid = 736) AND (culture = 'fr');

  Q9:
    Q-AdvW: Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest. For each order show the CompanyName and the SubTotal and the total weight of the order.
    R-AdvW: |
    S-AdvW: |
      SELECT companyname, subtotal, SUM(orderqty * weight) weight
      FROM SalesOrderHeader sh JOIN SalesOrderDetail sd ON sh.salesorderid = sd.salesorderid
      JOIN Product p ON sd.productid = p.productid
      JOIN Customer c ON sh.customerid = c.customerid
      GROUP BY sh.salesorderid, companyname, subtotal
      ORDER BY subtotal DESC;

  Q10:
    Q-AdvW: How many products in ProductCategory 'Cranksets' have been sold to an address in 'London'?
    R-AdvW: |
    S-AdvW: |
      SELECT SUM(orderqty) total
      FROM Address a JOIN SalesOrderHeader sh ON a.addressid = sh.billtoaddressid
      JOIN SalesOrderDetail sd ON sh.salesorderid = sd.salesorderid
      JOIN Product p ON sd.productid = p.productid
      JOIN ProductCategory pc ON p.productcategoryid = pc.productcategoryid
      WHERE (city = 'London') AND (pc.name = 'Cranksets');

  Q11:
    Q-AdvW: For every customer with a 'Main Office' in Dallas show AddressLine1 of the 'Main Office' and AddressLine1 of the 'Shipping' address. If there is no shipping address leave it blank. Use one row per customer.
    R-AdvW: |
    S-AdvW: |
      SELECT companyname,
        MAX(CASE WHEN addresstype = 'Main Office' THEN addressline1 ELSE '' END) main_office,
        MAX(CASE WHEN addresstype = 'Shipping' THEN addressline1 ELSE '' END) shipping
      FROM CustomerAddress ca JOIN Address a ON ca.addressid = a.addressid
      JOIN Customer c ON ca.customerid = c.customerid
      WHERE city = 'Dallas'
      GROUP BY companyname;

  Q12:
    Q-AdvW: For each order show the SalesOrderID and SubTotal calculated three ways:
      A) From the SalesOrderHeader
      B) Sum of OrderQty*UnitPrice
      C) Sum of OrderQty*ListPrice
    R-AdvW: |
    S-AdvW: |
      WITH tempA AS (
        SELECT salesorderid, subtotal A_total
        FROM SalesOrderHeader
      ), tempB AS (
        SELECT salesorderid, SUM(orderqty * unitprice) B_total
        FROM SalesOrderDetail
        GROUP BY salesorderid
      ), tempC AS (
        SELECT salesorderid, SUM(orderqty * listprice) C_total
        FROM SalesOrderDetail sd JOIN Product p ON sd.productid = p.productid
        GROUP BY salesorderid
      )
      SELECT tempA.salesorderid, A_total, B_total, C_total
      FROM tempA JOIN tempB ON tempA.salesorderid = tempB.salesorderid
      JOIN tempC ON tempB.salesorderid = tempC.salesorderid;

  Q13:
    Q-AdvW: Show the best selling item by value.
    R-AdvW: |
    S-AdvW: |
      SELECT name, SUM(orderqty * unitprice) total_value
      FROM SalesOrderDetail sd JOIN Product p ON sd.productid = p.productid
      GROUP BY name
      ORDER BY total_value DESC
      LIMIT 1;

  Q14:
    Q-AdvW: Show how many orders are in the following ranges (in $):
      RANGE      Num Orders      Total Value
      0-99
      100-999
      1000-9999
      10000-
    R-AdvW: |
    S-AdvW: |
      WITH temp1 AS (
        SELECT salesorderid, SUM(orderqty * unitprice) order_total
        FROM SalesOrderDetail
        GROUP BY salesorderid
      ), temp2 AS (
        SELECT salesorderid, order_total, CASE
          WHEN order_total BETWEEN 0 AND 99 THEN '0-99'
          WHEN order_total BETWEEN 100 AND 999 THEN '100-999'
          WHEN order_total BETWEEN 1000 AND 9999 THEN '1000-9999'
          WHEN order_total >= 10000 THEN '10000-'
          ELSE 'Error'
          END AS rng
        FROM temp1
      )
      SELECT rng 'RANGE', COUNT(rng) 'Num Orders', SUM(order_total) 'Total Value'
      FROM temp2
      GROUP BY rng;

  Q15:
    Q-AdvW: Identify the three most important cities. Show the break down of top level product category against city.
    R-AdvW: |
    S-AdvW: |
      WITH temp1 AS (
        SELECT city, SUM(unitprice * orderqty) AS total_sales
        FROM SalesOrderDetail sd JOIN SalesOrderHeader sh ON sd.salesorderid = sh.salesorderid
        JOIN Address a ON sh.shiptoaddressid = a.addressid
        GROUP BY city
        ORDER BY total_sales DESC
        LIMIT 3
      )
      SELECT city, pc.name, SUM(unitprice * orderqty) total_sales
      FROM SalesOrderDetail sd JOIN SalesOrderHeader sh ON sd.salesorderid = sh.salesorderid
      JOIN Address a ON sh.shiptoaddressid = a.addressid
      JOIN Product p ON sd.productid = p.productid
      JOIN ProductCategory pc ON p.productcategoryid = pc.productcategoryid
      WHERE city IN (SELECT city FROM temp1)
      GROUP BY city, pc.name
      ORDER BY city, total_sales DESC;

  Q16:
    Q-AdvW:  List the SalesOrderNumber for the customers 'Good Toys' and 'Bike World'.
    R-AdvW: |
    S-AdvW: |
      SELECT salesordernumber
      FROM Customer c JOIN SalesOrderHeader sh ON c.customerid = sh.customerid
      WHERE companyname LIKE '%Good Toys%' OR companyname LIKE '%Bike World%';
  Q17:
    Q-AdvW:  List the CompanyName and SalesOrderID for the customers 'Good Toys' and 'Bike World'.
    R-AdvW: |
    S-AdvW: |
      SELECT companyname, salesorderid
      FROM Customer c JOIN SalesOrderHeader sh ON c.customerid = sh.customerid
      WHERE companyname LIKE '%Good Toys%' OR companyname LIKE '%Bike World%';
  Q18:
    Q-AdvW:  List the name and addresses of companies containing the word 'Bike' (upper or lower case) and companies containing 'cycle' (upper or lower case).
    R-AdvW: |
    S-AdvW: |
      WITH temp1 AS (
        (SELECT DISTINCT(companyname), customerid, IF(1, 'bike', '') tag
        FROM Customer
        WHERE companyname LIKE '%bike%'
        ) UNION ALL (
        SELECT DISTINCT(companyname), customerid, IF(1, 'cycle', '') tag
        FROM Customer
        WHERE companyname LIKE '%cycle%')
      )
      SELECT companyname, tag, ca.addressid, addressline1, addressline2, city, stateprovince, postalcode
      FROM temp1 JOIN CustomerAddress ca ON temp1.customerid = ca.customerid
      JOIN Address a ON ca.addressid = a.addressid
      ORDER BY tag;
  Q19:
    Q-AdvW:  Show the total order value for each CountryRegion.
    List by value with the highest first.
    R-AdvW: |
    S-AdvW: |
      SELECT countyregion, SUM(subtotal) total
      FROM Address a JOIN SalesOrderHeader sh ON a.addressid = sh.shiptoaddressid
      GROUP BY countyregion;
  Q20:
    Q-AdvW:  Find the best customer in each region.
    R-AdvW: |
    S-AdvW: |
      WITH temp1 AS (
        SELECT countyregion, companyname, SUM(subtotal) total,
          RANK() OVER (PARTITION BY countyregion ORDER BY total DESC) rnk
        FROM Address a JOIN SalesOrderHeader sh ON a.addressid = sh.shiptoaddressid
        JOIN Customer c ON sh.customerid = c.customerid
        GROUP BY countyregion, companyname
      )
      SELECT countyregion, companyname, total
      FROM temp1
      WHERE rnk = 1;