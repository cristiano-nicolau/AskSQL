## TPC-H Benchmark Queries
## This file contains the TPC-H benchmark queries and their corresponding SQL queries.
## The TPC-H benchmark is a decision support benchmark that consists of 22 queries
## and a data generation tool. The benchmark is designed to be representative of
## a wide range of decision support applications. The queries are designed to
## be complex and to require a variety of operations, including joins, aggregations,
## and subqueries. 


## You can encounter the queries on the TPC-H website:
## https://www.tpc.org/tpch/

## Its necessary substitute the placeholders in the SQL queries with the appropriate values [XXX]

Questions:
  - Q1:
      Q_GPT: What is the summary of price, discount, and revenue for line items shipped within a given date range?
      Q-TPC-H: >
        The Pricing Summary Report Query provides a summary pricing report for all lineitems shipped as of a given date. 
        The date is within 60 - 120 days of the greatest ship date contained in the database. The query lists totals for 
        extended price, discounted extended price, discounted extended price plus tax, average quantity, average extended 
        price, and average discount. These aggregates are grouped by RETURNFLAG and LINESTATUS, and listed in ascending 
        order of RETURNFLAG and LINESTATUS. A count of the number of lineitems in each group is included.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          l_returnflag,
          l_linestatus,
          sum(l_quantity) as sum_qty,
          sum(l_extendedprice) as sum_base_price,
          sum(l_extendedprice*(1-l_discount)) as sum_disc_price,
          sum(l_extendedprice*(1-l_discount)*(1+l_tax)) as sum_charge,
          avg(l_quantity) as avg_qty,
          avg(l_extendedprice) as avg_price,
          avg(l_discount) as avg_disc,
          count(*) as count_order
        from
          lineitem
        where
          l_shipdate <= date '1998-12-01' - interval '[DELTA]' day (3)
        group by
          l_returnflag,
          l_linestatus
        order by
          l_returnflag,
          l_linestatus;

  - Q2:
      Q_GPT: Which supplier provides the minimum cost for each part available in a given region?
      Q-TPC-H: >
        The Minimum Cost Supplier Query finds, in a given region, for each part of a certain type and size, the supplier who
        can supply it at minimum cost. If several suppliers in that region offer the desired part type and size at the same
        (minimum) cost, the query lists the parts from suppliers with the 100 highest account balances. For each supplier,
        the query lists the supplier's account balance, name and nation; the part's number and manufacturer; the supplier's
        address, phone number and comment information.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          s_acctbal,
          s_name,
          n_name,
          p_partkey,
          p_mfgr,
          s_address,
          s_phone,
          s_comment
        from
          supplier,
          partsupp,
          part,
          nation,
          region
        where
          p_partkey = ps_partkey
          and s_suppkey = ps_suppkey
          and p_size = [SIZE]
          and p_type like '%[TYPE]'
          and s_nationkey = n_nationkey
          and n_regionkey = r_regionkey
          and r_name = '[REGION]'
          and ps_supplycost = (
            select
              min(ps_supplycost)
            from
              partsupp, supplier,
              nation, region
            where
              p_partkey = ps_partkey
              and s_suppkey = ps_suppkey
              and s_nationkey = n_nationkey
              and n_regionkey = r_regionkey
              and r_name = '[REGION]'
            )
        order by
          s_acctbal desc,
          n_name,
          s_name,
          p_partkey;

  - Q3:
      Q_GPT: What are the top 10 unshipped orders based on revenue within a given date range?
      Q-TPC-H: >
        The Shipping Priority Query retrieves the shipping priority and potential revenue, defined as the sum of
        l_extendedprice * (1-l_discount), of the orders having the largest revenue among those that had not been shipped as
        of a given date. Orders are listed in decreasing order of revenue. If more than 10 unshipped orders exist, only the 10
        orders with the largest revenue are listed.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          l_orderkey,
          sum(l_extendedprice * (1 - l_discount)) as revenue,
          o_orderpriority
        from
          customer,
          orders,
          lineitem
        where
          c_mktsegment = '[MARKET]'
          and c_custkey = o_custkey
          and l_orderkey = o_orderkey
          and o_orderdate < date '[DATE]'
          and l_shipdate > date '[DATE]'
        group by
          l_orderkey,
          o_orderpriority
        order by
          revenue desc,
          o_orderpriority
        limit 10;

  - Q4:
      Q_GPT: How many orders were placed with a high-priority status within a given date range?
      Q-TPC-H: >
        The Order Priority Checking Query counts the number of orders ordered in a given quarter of a given year in which
        at least one lineitem was received by the customer later than its committed date. The query lists the count of such
        orders for each order priority sorted in ascending priority order.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          o_orderpriority,
          count(*) as order_count
        from
          orders,
        where
          co_orderdate >= date '[DATE]'
          and o_orderdate < date '[DATE]' + interval '3' month
          and exists (
            select
              *
            from
              lineitem
            where
              l_orderkey = o_orderkey
              and l_commitdate < l_receiptdate
            )
        group by
          o_orderpriority
        order by
          o_orderpriority;

  - Q5:
      Q_GPT: What is the total revenue of suppliers from the same nation as their customers?
      Q-TPC-H: >
        The Local Supplier Volume Query lists for each nation in a region the revenue volume that resulted from lineitem
        transactions in which the customer ordering parts and the supplier filling them were both within that nation. The
        query is run in order to determine whether to institute local distribution centers in a given region. The query consid-
        ers only parts ordered in a given year. The query displays the nations and revenue volume in descending order by
        revenue. Revenue volume for all qualifying lineitems in a particular nation is defined as sum(l_extendedprice * (1 -
        l_discount))
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          n_name,
          sum(l_extendedprice * (1 - l_discount)) as revenue  
        from
          customer,
          orders,
          lineitem,
          supplier,
          nation,
          region
        where
          c_custkey = o_custkey
          and l_orderkey = o_orderkey
          and l_suppkey = s_suppkey
          and c_nationkey = s_nationkey
          and s_nationkey = n_nationkey
          and n_regionkey = r_regionkey
          and r_name = '[REGION]'
          and o_orderdate >= date '[DATE]'
          and o_orderdate < date '[DATE]' + interval '1' year
        group by
          n_name
        order by
          revenue desc;

  - Q6:
      Q_GPT: How much additional revenue would be generated if suppliers increased their prices by a given percentage?
      Q-TPC-H: >
        The Forecasting Revenue Change Query considers all the lineitems shipped in a given year with discounts between
        DISCOUNT-0.01 and DISCOUNT+0.01. The query lists the amount by which the total revenue would have
        increased if these discounts had been eliminated for lineitems with l_quantity less than quantity. Note that the
        potential revenue increase is equal to the sum of [l_extendedprice * l_discount] for all lineitems with discounts and
        quantities in the qualifying range.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          sum(l_extendedprice*l_discount) as revenue
        from
          lineitem
        where
          l_shipdate >= date '[DATE]'
          and l_shipdate < date '[DATE]' + interval '1' year
          and l_discount between [DISCOUNT] - 0.01 and [DISCOUNT] + 0.01
          and l_quantity < [QUANTITY];

  - Q7:
      Q_GPT: Which suppliers have shipped the largest total volume of a specific type of part within a given time period?
      Q-TPC-H: >
        The Volume Shipping Query finds, for two given nations, the gross discounted revenues derived from lineitems in
        which parts were shipped from a supplier in either nation to a customer in the other nation during 1995 and 1996.
        The query lists the supplier nation, the customer nation, the year, and the revenue from shipments that took place in
        that year. The query orders the answer by Supplier nation, Customer nation, and year (all ascending).
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          supp_nation,
          cust_nation,
          l_year, sum(volume) as revenue
        from
          (
            select
              n1.n_name as supp_nation,
              n2.n_name as cust_nation,
              extract(year from l_shipdate) as l_year,
              l_extendedprice * (1 - l_discount) as volume
            from
              part,
              supplier,
              lineitem,
              orders,
              customer,
              nation n1,
              nation n2
            where
              s_suppkey = l_suppkey
              and c_custkey = o_custkey
              and o_orderkey = l_orderkey
              and p_partkey = l_partkey
              and s_nationkey = n1.n_nationkey
              and c_nationkey = n2.n_nationkey
              and (
                (n1.n_name = '[NATION1]' and n2.n_name = '[NATION2]') or (n1.n_name = '[NATION2]' and n2.n_name = '[NATION1]')
              )
            and l_shipdate between date '1995-01-01' and date '1996-12-31'
          ) as shipping
        group by
          supp_nation,
          cust_nation,
          l_year
        order by
          supp_nation,
          cust_nation,
          l_year;

  - Q8:
      Q_GPT: What is the market share of a given type of part within a specific country?
      Q-TPC-H: >
        The market share for a given nation within a given region is defined as the fraction of the revenue, the sum of
        [l_extendedprice * (1-l_discount)], from the products of a specified type in that region that was supplied by suppli-
        ers from the given nation. The query determines this for the years 1995 and 1996 presented in this order.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          o_year,
          sum(case
            when nation = '[NATION]' then volume
            else 0
          end) / sum(volume) as mkt_share
        from
          (
            select
              extract(year from o_orderdate) as o_year,
              l_extendedprice * (1 - l_discount) as volume,
              n_name as nation
            from
              part,
              supplier,
              lineitem,
              orders,
              customer,
              nation,
              region
            where
              p_partkey = l_partkey
              and s_suppkey = l_suppkey
              and l_orderkey = o_orderkey
              and o_custkey = c_custkey
              and c_nationkey = n1.n_nationkey
              and n1.n_regionkey = r_regionkey
              and r_name = '[REGION]'
              and s_nationkey = n2.n_nationkey
              and o_orderdate between date '1995-01-01' and date '1996-12-31'
              and p_type = '[TYPE]'
          ) as all_nations
        group by
          o_year
        order by
          o_year;

  - Q9:
      Q_GPT: What is the profit for each product type by year and region?
      Q-TPC-H: >
        The Product Type Profit Measure Query finds, for each nation and each year, the profit for all parts ordered in that
        year that contain a specified substring in their names and that were filled by a supplier in that nation. The profit is
        defined as the sum of [(l_extendedprice*(1-l_discount)) - (ps_supplycost * l_quantity)] for all lineitems describing
        parts in the specified line. The query lists the nations in ascending alphabetical order and, for each nation, the year
        and profit in descending order by year (most recent first).
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          nation,
          o_year,
          sum(amount) as sum_profit
        from
          (
            select
              n_name as nation,
              extract(year from o_orderdate) as o_year,
              (l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity) as amount
            from
              part,
              supplier,
              lineitem,
              orders,
              partsupp,
              nation
            where
              s_suppkey = l_suppkey
              and ps_suppkey = s_suppkey
              and ps_partkey = p_partkey
              and l_orderkey = o_orderkey
              and s_nationkey = n_nationkey
              and p_name like '%[COLOR]'
            )
          as profit
        group by
          nation,
          o_year
        order by
          nation,
          o_year desc;

  - Q10:
      Q_GPT: Which customers have returned the highest total value of orders within a given time period?
      Q-TPC-H: >
        The Returned Item Reporting Query finds the top 20 customers, in terms of their effect on lost revenue for a given
        quarter, who have returned parts. The query considers only parts that were ordered in the specified quarter. The
        query lists the customer's name, address, nation, phone number, account balance, comment information and revenue
        lost. The customers are listed in descending order of lost revenue. Revenue lost is defined as
        sum(l_extendedprice*(1-l_discount)) for all qualifying lineitems.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          c_custkey,
          c_name,
          c_address,
          c_nationkey,
          c_phone,
          c_acctbal,
          c_comment,
          sum(l_extendedprice * (1 - l_discount)) as revenue
        from
          customer,
          orders,
          lineitem,
          nation
        where
          c_custkey = o_custkey
          and l_orderkey = o_orderkey
          and o_orderdate >= date '[DATE]'
          and o_orderdate < date '[DATE]' + interval '3' month
          and l_returnflag = 'R'
          and c_nationkey = n_nationkey
        group by
          c_custkey,
          c_name,
          c_address,
          c_nationkey,
          c_phone,
          c_acctbal,
          c_comment
        order by
          revenue desc;

  - Q11:
      Q_GPT: What are the most frequently ordered parts that are currently in stock?
      Q-TPC-H: >
        The Important Stock Identification Query finds, from scanning the available stock of suppliers in a given nation, all
        the parts that represent a significant percentage of the total value of all available parts. The query displays the part
        number and the value of those parts in descending order of value.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          ps_partkey,
          sum(ps_supplycost * ps_availqty) as value
        from
          partsupp,
          supplier,
          nation
        where
          ps_suppkey = s_suppkey
          and s_nationkey = n_nationkey
          and n_name = '[NATION]'
        group by
          ps_partkey having
            sum(ps_supplycost * ps_availqty) > (
              select
                sum(ps_supplycost * ps_availqty) * [FRACTION]
              from
                partsupp,
                supplier,
                nation
              where
                ps_suppkey = s_suppkey
                and s_nationkey = n_nationkey
                and n_name = '[NATION]'
            )
        order by
          value desc;

  - Q12:
      Q_GPT: What is the distribution of order priority by shipping mode for a given time period?
      Q-TPC-H: >
        The Shipping Modes and Order Priority Query counts, by ship mode, for lineitems actually received by customers in
        a given year, the number of lineitems belonging to orders for which the l_receiptdate exceeds the l_commitdate for
        two different specified ship modes. Only lineitems that were actually shipped before the l_commitdate are con-
        sidered. The late lineitems are partitioned into two groups, those with priority URGENT or HIGH, and those with a
        priority other than URGENT or HIGH.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          l_shipmode,
          sum(case
            when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1
            else 0
          end) as high_line_count,
          sum(case
            when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1
            else 0
          end) as low_line_count
        from
          orders,
          lineitem
        where
          o_orderkey = l_orderkey
          and l_shipmode in ('[SHIPMODE1]', '[SHIPMODE2]')
          and l_commitdate < l_receiptdate
          and l_shipdate < l_commitdate
          and l_receiptdate >= date '[DATE]'
          and l_receiptdate < date '[DATE]' + interval '1' year
        group by
          l_shipmode
        order by
          l_shipmode;
  
  - Q13:
      Q_GPT: How are customers distributed based on the number of orders they have placed?
      Q-TPC-H: >
        This query determines the distribution of customers by the number of orders they have made, including customers
        who have no record of orders, past or present. It counts and reports how many customers have no orders, how many
        have 1, 2, 3, etc. A check is made to ensure that the orders counted do not fall into one of several special categories
        of orders. Special categories are identified in the order comment column by looking for a particular pattern.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          c_count, count(*) as custdist
        from (
          select
            c_custkey,
            count(o_orderkey)
          from
            customer left outer join orders on
            c_custkey = o_custkey
            and o_comment not like ‘%[WORD1]%[WORD2]%’
          group by
            c_custkey
          ) as c_orders (c_custkey, c_count)
        group by
          c_count
        order by
          custdist desc;

  - Q14:
      Q_GPT: What percentage of revenue came from parts sold at a promotional discount?
      Q-TPC-H: >
        The Promotion Effect Query determines what percentage of the revenue in a given year and month was derived from
        promotional parts. The query considers only parts actually shipped in that month and gives the percentage. Revenue
        is defined as (l_extendedprice * (1-l_discount)).
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          100.00 * sum(case
            when p_type like 'PROMO%'
            then l_extendedprice*(1-l_discount)
            else 0
            end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
        from
          lineitem,
          part
        where
          l_partkey = p_partkey
          and l_shipdate >= date '[DATE]'
          and l_shipdate < date '[DATE]' + interval '1' month;
  
  - Q15:
      Q_GPT: Which suppliers provide the highest total revenue within a given time frame?
      Q-TPC-H: >
        The Top Supplier Query finds the supplier who contributed the most to the overall revenue for parts shipped during
        a given quarter of a given year. In case of a tie, the query lists all suppliers whose contribution was equal to the
        maximum, presented in supplier number order.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        create view revenue[STREAM_ID] (supplier_no, total_revenue) as
          select
            s_suppkey,
            sum(l_extendedprice * (1 - l_discount)) as total_revenue
          from
            lineitem
          where
            l_shipdate >= date '[DATE]'
            and l_shipdate < date '[DATE]' + interval '3' month
          group by
            l_suppkey;
        select
          s_suppkey,
          s_name,
          s_address,
          s_phone,
          total_revenue
        from
          supplier,
          revenue[STREAM_ID]
        where
          s_suppkey = supplier_no
          and total_revenue = (
            select
              max(total_revenue)
            from
              revenue[STREAM_ID]
            )
        order by
          s_suppkey;

        drop view revenue[STREAM_ID];

  - Q16:
      Q_GPT: Which suppliers provide parts that have the highest demand?
      Q-TPC-H: >
        The Parts/Supplier Relationship Query counts the number of suppliers who can supply parts that satisfy a particular
        customer's requirements. The customer is interested in parts of eight different sizes as long as they are not of a given
        type, not of a given brand, and not from a supplier who has had complaints registered at the Better Business Bureau.
        Results must be presented in descending count and ascending brand, type, and size.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          p_brand,
          p_type,
          p_size,
          count(distinct ps_suppkey) as supplier_count
        from
          partsupp,
          part
        where
          ps_partkey = p_partkey
          and p_brand <> '[BRAND]'
          and p_type not like '[TYPE]'
          and p_size in ([SIZE1], [SIZE2], [SIZE3], [SIZE4], [SIZE5], [SIZE6], [SIZE7], [SIZE8])
          and ps_suppkey not in (
            select
              s_suppkey
            from
              supplier
            where
              s_comment like '%[WORD1]%[WORD2]%'
            )
        group by
          p_brand,
          p_type,
          p_size
        order by
          p_brand,
          p_type,
          p_size;

  - Q17:
      Q_GPT: What is the total revenue from orders consisting of small-quantity purchases?
      Q-TPC-H: >
        The Small-Quantity-Order Revenue Query considers parts of a given brand and with a given container type and
        determines the average lineitem quantity of such parts ordered for all orders (past and pending) in the 7-year data-
        base. What would be the average yearly gross (undiscounted) loss in revenue if orders for these parts with a quantity
        of less than 20% of this average were no longer taken?
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          sum(l_extendedprice) / 7.0 as avg_yearly
        from
          lineitem,
          part
        where
          l_partkey = p_partkey
          and p_brand = '[BRAND]'
          and p_container = '[CONTAINER]'
          and l_quantity < (
            select
              0.2 * avg(l_quantity)
            from
              lineitem,
              part
            where
              l_partkey = p_partkey
            );

  - Q18:
      Q_GPT: Who are the customers that place the highest volume of orders?
      Q-TPC-H: >
        The Large Volume Customer Query finds a list of the top 100 customers who have ever placed large quantity orders.
        The query lists the customer name, customer key, the order key, date and total price and the quantity for the order.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice,
          sum(l_quantity)
        from
          customer,
          orders,
          lineitem
        where
          o_orderkey in (
            select
              l_orderkey
            from
              lineitem
            group by
              l_orderkey having
                sum(l_quantity) > [QUANTITY]
          )
          and c_custkey = o_custkey
          and o_orderkey = l_orderkey
        group by
          c_name,
          c_custkey,
          o_orderkey,
          o_orderdate,
          o_totalprice
        order by
          o_totalprice desc,
          o_orderdate
        limit 100;

  - Q19:
      Q_GPT: How much revenue is generated from orders that received a discount?
      Q-TPC-H: >
        The Discounted Revenue query finds the gross discounted revenue for all orders for three different types of parts
        that were shipped by air and delivered in person. Parts are selected based on the combination of specific brands, a
        list of containers, and a range of sizes.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          sum(l_extendedprice * (1 - l_discount)) as revenue
        from
          lineitem,
          part
        where
          (
            p_partkey = l_partkey
            and p_brand = ‘[BRAND1]’
            and p_container in ( ‘SM CASE’, ‘SM BOX’, ‘SM PACK’, ‘SM PKG’)
            and l_quantity >= [QUANTITY1] and l_quantity <= [QUANTITY1] + 10
            and p_size between 1 and 5
            and l_shipmode in (‘AIR’, ‘AIR REG’)
            and l_shipinstruct = ‘DELIVER IN PERSON’
          )
          or
          (
            p_partkey = l_partkey
            and p_brand = ‘[BRAND2]’
            and p_container in ( ‘MED BAG’, ‘MED BOX’, ‘MED PKG’, ‘MED PKG’)
            and l_quantity >= [QUANTITY2] and l_quantity <= [QUANTITY2] + 10
            and p_size between 1 and 10
            and l_shipmode in (‘AIR’, ‘AIR REG’)
            and l_shipinstruct = ‘DELIVER IN PERSON’
          )
          or
          (
            p_partkey = l_partkey
            and p_brand = ‘[BRAND3]’
            and p_container in ( ‘LG CASE’, ‘LG BOX’, ‘LG PACK’, ‘LG PKG’)
            and l_quantity >= [QUANTITY3] and l_quantity <= [QUANTITY3] + 10
            and p_size between 1 and 15
            and l_shipmode in (‘AIR’, ‘AIR REG’)
            and l_shipinstruct = ‘DELIVER IN PERSON’
          );

  - Q20:
      Q_GPT: Which parts have a sales pattern that suggests they would benefit from a promotion?
      Q-TPC-H: >
        The Potential Part Promotion query identifies suppliers who have an excess of a given part available; an excess is
        defined to be more than 50% of the parts like the given part that the supplier shipped in a given year for a given
        nation. Only parts whose names share a certain naming convention are considered.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          s_name,
          p_address,
        from
          supplier,
          nation
        where
          s_suppkey in (
            select
              ps_suppkey
            from
              partsupp,
              part
            where
              ps_partkey in (
                select
                  p_partkey
                from
                  part
                where
                  p_name like '%[COLOR]%'
              )
                and ps_availqty > 0.5 * (
                  select
                    sum(ps_availqty)
                  from
                    lineitem,
                  where
                    l_partkey = p_partkey
                    and l_suppkey = ps_suppkey
                    and l_shipdate >= date '[DATE]'
                    and l_shipdate < date '[DATE]' + interval '1' year
                )
            )
          and s_nationkey = n_nationkey
          and n_name = '[NATION]'
        order by
          s_name;

  - Q21:
      Q_GPT: Which suppliers had the longest average order fulfillment time?
      Q-TPC-H: >
        The Suppliers Who Kept Orders Waiting query identifies suppliers, for a given nation, whose product was part of a
        multi-supplier order (with current status of 'F') where they were the only supplier who failed to meet the committed
        delivery date.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          s_name,
          count(*) as numwait
        from
          supplier,
          lineitem l1,
          orders,
          nation
        where
          s_suppkey = l1.l_suppkey
          and o_orderkey = l1.l_orderkey
          and o_orderstatus = 'F'
          and l1.l_receiptdate > l1.l_commitdate
          and exists (
            select
              *
            from
              lineitem l2
            where
              l2.l_orderkey = l1.l_orderkey
              and l2.l_suppkey <> l1.l_suppkey
            )
          and s_nationkey = n_nationkey
          and n_name = '[NATION]'
          and not exists (
            select
              *
            from
              lineitem l3
            where
              l3.l_orderkey = l1.l_orderkey
              and l3.l_suppkey <> l1.l_suppkey
              and l3.l_receiptdate > l3.l_commitdate
            )
        group by
          s_name
        order by
          numwait desc,
          s_name
        limit 100;

  - Q22:
      Q_GPT: Which suppliers have parts that are frequently ordered by customers in other regions?
      Q-TPC-H: >
        This query counts how many customers within a specific range of country codes have not placed orders for 7 years
        but who have a greater than average “positive” account balance. It also reflects the magnitude of that balance.
        Country code is defined as the first two characters of c_phone.
      R-TPC-H: |
      
      R_GPT: |
      
      S-TPC-H: |
        select
          entrycode,
          count(*) as numcust,
          sum(c_acctbal) as totacctbal
        from
        (
          select
            substring(c_phone from 1 for 2) as cntrycode,
            c_acctbal
          from
            customer
          where
            substring(c_phone from 1 for 2) in
              ('[I1]','[I2]’,'[I3]','[I4]','[I5]','[I6]','[I7]')
            and c_acctbal > (
              select
                avg(c_acctbal)
              from
                customer
              where
                substring(c_phone from 1 for 2) in
                  ('[I1]','[I2]’,'[I3]','[I4]','[I5]','[I6]','[I7]')
            )
            and not exists (
              select
                *
              from
                orders
              where
                o_custkey = c_custkey
            ) 
        ) as custsale
        group by
          entrycode
        order by
          entrycode;